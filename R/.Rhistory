if (incl_base) {
abs_stand_diff <- c(abs_stand_diff, smds_base_avg)
}
abs_stand_diff <- c(abs_stand_diff, smds_refined_avg)
plot_dataframe <- data.frame(abs_stand_diff = abs_stand_diff,
covariates = rep(covariates_plot, 3),
type = rep(legend, each = length(covariates_plot)))
p <- ggplot(plot_dataframe, aes(x = .data$abs_stand_diff, y = .data$covariates)) +
geom_point(size = 5, aes(shape = .data$type)) +
scale_shape_manual(values = c(4, 1)) +
geom_vline(xintercept = c(.1,.2), lty = 2) +
xlab("Absolute standardized difference") +
ylab("Covariate") +
labs(shape = "") +
theme(text = element_text(size=10), strip.text.x = element_text(size = 12))
p
abs_stand_diff
plot_dataframe
?scale_shape_manual
plot_dataframe <- data.frame(abs_stand_diff = abs_stand_diff,
covariates = rep(covariates_plot, 3),
type = factor(rep(legend, each = length(covariates_plot)), levels = legend))
p <- ggplot(plot_dataframe, aes(x = .data$abs_stand_diff, y = .data$covariates)) +
geom_point(size = 5, aes(shape = .data$type)) +
scale_shape_manual(values = c(0, 1, 4)) +
geom_vline(xintercept = c(.1,.2), lty = 2) +
xlab("Absolute standardized difference") +
ylab("Covariate") +
labs(shape = "") +
theme(text = element_text(size=10), strip.text.x = element_text(size = 12))
if (by_strata & incl_base) {
if (!weighted_avg) {
smds_refined_collapsed <- t(sapply(1:nrow(smds$base), function(s) {
colMeans(smds$refined[(2*s-1):(2*s), ])
}))
} else {
smds_refined_collapsed <- t(sapply(1:nrow(smds$base), function(s) {
(table(x$refined_strata)[(2*s-1):(2*s)] %*% smds$refined[(2*s-1):(2*s), ]) / table(x$base_strata)[s]
}))
}
plot_dataframe <- data.frame(abs_stand_diff = c(c(t(smds$base)),
c(t(smds_refined_collapsed))),
covariates = rep(covariates_plot, nrow(smds$base) * 2),
type = factor(rep(legend[2:3], each = length(covariates_plot) * nrow(smds$base)),
levels = legend[2:3]),
stratum = rep(rep(row.names(smds$base), each = length(covariates_plot)), 2))
p <- apply(as.array(levels(x$base_strata)), 1, function(s) {
ggplot(plot_dataframe[plot_dataframe$stratum == s,],
aes(x = .data$abs_stand_diff, y = .data$covariates)) +
geom_point(size = 5, aes(shape = .data$type)) +
scale_shape_manual(values = c(1, 4)) +
geom_vline(xintercept = c(.1,.2), lty = 2) +
xlab("Absolute standardized difference") +
ylab("Covariate") +
labs(shape = "") +
ggtitle(s) +
theme(text = element_text(size=10), strip.text.x = element_text(size = 12))
})
names(p) <- levels(x$base_strata)
} else if(by_strata & !incl_base) {
plot_dataframe <- data.frame(abs_stand_diff = c(t(smds$refined)),
covariates = rep(covariates_plot, nrow(smds$refined)),
type = factor(rep(legend[3], length(smds$refined))),
stratum = rep(row.names(smds$refined), each = length(covariates_plot)))
p <- apply(as.array(levels(x$refined_strata)), 1, function(s) {
ggplot(plot_dataframe[plot_dataframe$stratum == s,],
aes(x = .data$abs_stand_diff, y = .data$covariates)) +
geom_point(size = 5, aes(shape = .data$type)) +
scale_shape_manual(values = c(4)) +
geom_vline(xintercept = c(.1,.2), lty = 2) +
xlab("Absolute standardized difference") +
ylab("Covariate") +
labs(shape = "") +
ggtitle(s) +
theme(text = element_text(size=10), strip.text.x = element_text(size = 12))
})
names(p) <- levels(x$refined_strata)
} else {
abs_stand_diff <- NULL
if (incl_none) {
abs_stand_diff <- c(abs_stand_diff, smds_no_st$base)
}
if (incl_base) {
abs_stand_diff <- c(abs_stand_diff, smds_base_avg)
}
abs_stand_diff <- c(abs_stand_diff, smds_refined_avg)
plot_dataframe <- data.frame(abs_stand_diff = abs_stand_diff,
covariates = rep(covariates_plot, 3),
type = factor(rep(legend, each = length(covariates_plot)), levels = legend))
p <- ggplot(plot_dataframe, aes(x = .data$abs_stand_diff, y = .data$covariates)) +
geom_point(size = 5, aes(shape = .data$type)) +
scale_shape_manual(values = c(0, 1, 4)) +
geom_vline(xintercept = c(.1,.2), lty = 2) +
xlab("Absolute standardized difference") +
ylab("Covariate") +
labs(shape = "") +
theme(text = element_text(size=10), strip.text.x = element_text(size = 12))
}
p
usethis::use_test()
roxygen2::roxygenise("..")
roxygen2::roxygenise("..")
?plot.strat
plot(strat(z = z, X = X))
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 10)]
z <- rhc_X[samp_rows, "z"]
plot(strat(z = z, X = X))
test_that("Can plot smds for no stratification", {
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 10)]
z <- rhc_X[samp_rows, "z"]
expect_warning(plot(strat(z = z, X = X)), "No initial stratification")
})
plot(strat(z = z, X = X), incl_base = FALSE)
class(p)
expect_s3_class(plot(strat(z = z, X = X), incl_base = FALSE), "ggplot")
prop_strat(strat(z = z, X = X), incl_none = FALSE)
plot(prop_strat(z = z, X = X), incl_none = FALSE)
plot(prop_strat(z = z, X = X), incl_none = FALSE, by_strata = TRUE)
p <- plot(prop_strat(z = z, X = X), incl_none = FALSE, by_strata = TRUE)
expect_length(p, 5)
expect_s3_class(p[[3]], "ggplot")
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 10)]
z <- rhc_X[samp_rows, "z"]
p <- plot(prop_strat(z = z, X = X), weighted_avg = TRUE)
p
p <- plot(prop_strat(z = z, X = X, nstrata = 3), weighted_avg = TRUE)
expect_length(p, 5)
p
p1 <- plot(prop_strat(z = z, X = X, nstrata = 3), weighted_avg = FALSE)
ps <- prop_strat(z = z, X = X, nstrata = 3)
smds <- calc_smds(ps)
smds
p1$data
colMeans(smds$base)
expect_equal(colMeans(smds$base)["meanp1"], p1$data[p1$data$covariates == "meanbp1" & p1$data$type == "Base strata"]
expect_s3_class(p, "ggplot")
expect_equal(colMeans(smds$base)["meanp1"], p1$data[p1$data$covariates == "meanbp1" & p1$data$type == "Base strata"])
expect_equal(colMeans(smds$base)["meanp1"], p1$data$abs_stand_diff[p1$data$covariates == "meanbp1" & p1$data$type == "Base strata"])
colMeans(smds$base)["meanp1"]
colMeans(smds$base)
expect_equal(colMeans(smds$base)["meanbp1"], p1$data$abs_stand_diff[p1$data$covariates == "meanbp1" & p1$data$type == "Base strata"])
colMeans(smds$base)["meanbp1"]
expect_equal(as.numeric(colMeans(smds$base)["meanbp1"]), p1$data$abs_stand_diff[p1$data$covariates == "meanbp1" & p1$data$type == "Base strata"])
p1$data
p$data
p
as.numeric(colMeans(smds$base)["meanbp1"])
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
p <- plot(ref, weighted_avg = TRUE)
p1 <- plot(ref, weighted_avg = FALSE)
smds <- calc_smds(ref)
expect_equal(as.numeric(colMeans(smds$refined)["temp1"]), p1$data$abs_stand_diff[p1$data$covariates == "temp1" & p1$data$type == "Base strata"])
smds$refined
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 500)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
p <- plot(ref, weighted_avg = TRUE)
ref
p <- plot(ref, weighted_avg = TRUE)
p <- plot(ref, weighted_avg = TRUE)
q
options(error = recover)
p <- plot(ref, weighted_avg = TRUE)
devtools::load_all()
p <- plot(ref, weighted_avg = TRUE)
table(x$refined_strata
)
smds$refined
table(x$refined_strata) %*% smds$refined
?%*%
table(x$refined_strata)
table(x$refined_strata) * smds$refined
smds$refined_nona <- smds$refined
smds$refined_nona[is.na(smds$refined)] <- 0
devtools::load_all()
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 500)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
p <- plot(ref, weighted_avg = TRUE)
colnames(x$X)
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 500)
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 500)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-1), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
p <- plot(ref, weighted_avg = TRUE)
p1 <- plot(ref, weighted_avg = FALSE)
smds <- calc_smds(ref)
expect_equal(as.numeric(colMeans(smds$refined)["temp1"]), p1$data$abs_stand_diff[p1$data$covariates == "temp1" & p1$data$type == "Base strata"])
as.numeric(colMeans(smds$refined)["temp1"])
colMeans(smds$refined)
colMeans(smds$refined, na.rm = TRUE)
expect_equal(as.numeric(colMeans(smds$refined, na.rm = TRUE)["cat1_colon"]), p1$data$abs_stand_diff[p1$data$covariates == "cat1_colon" & p1$data$type == "Refined strata"])
smds$refined
expect_equal(as.numeric(colMeans(smds$refined, na.rm = TRUE)["scoma1"]), unwgt$data$abs_stand_diff[p1$data$covariates == "scoma1" & p1$data$type == "Refined strata"])
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 500)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-1), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
wgt <- plot(ref, weighted_avg = TRUE)
unwgt <- plot(ref, weighted_avg = FALSE)
smds <- calc_smds(ref)
expect_equal(as.numeric(colMeans(smds$refined, na.rm = TRUE)["scoma1"]), unwgt$data$abs_stand_diff[p1$data$covariates == "scoma1" & p1$data$type == "Refined strata"])
smds$refined["scoma1"]
smds$refined[, "scoma1"]
table(ref$z, ref$refined_strata)
table(ref$refined_strata)
table(ref$refined_strata) * smds$refined[, "scoma1"]
expect_equal(sum(table(ref$refined_strata) * smds$refined[, "scoma1"], na.rm = TRUE) / length(z), wgt$data$abs_stand_diff[p1$data$covariates == "scoma1" & p1$data$type == "Refined strata"])
devtools::load_all()
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 10)]
z <- rhc_X[samp_rows, "z"]
expect_warning(plot(strat(z = z, X = X)), "No initial stratification")
expect_s3_class(plot(strat(z = z, X = X), incl_base = FALSE), "ggplot")
plot(strat(z = z, X = X)
)
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 10)]
z <- rhc_X[samp_rows, "z"]
p <- plot(prop_strat(z = z, X = X), incl_none = FALSE, by_strata = TRUE)
p
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 10)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 3)
p <- plot(ps, weighted_avg = TRUE)
p1 <- plot(ps, weighted_avg = FALSE)
p
covr::report()
covr::report()
test_that("Correct smd for base stratification", {
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 10)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 3)
wgt <- plot(ps, weighted_avg = TRUE)
unwgt <- plot(ps, weighted_avg = FALSE)
smds <- calc_smds(ps)
expect_equal(as.numeric(colMeans(smds$base)["meanbp1"]), unwgt$data$abs_stand_diff[unwgt$data$covariates == "meanbp1" & unwgt$data$type == "Base strata"])
# Base strata are equal in size so weighting shouldn't change anything
expect_equal(wgt, unwgt)
})
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 10)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 3)
table(ps$base_strata)
test_that("Correct smd for base stratification", {
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 102)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 10)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 3)
wgt <- plot(ps, weighted_avg = TRUE)
unwgt <- plot(ps, weighted_avg = FALSE)
smds <- calc_smds(ps)
expect_equal(as.numeric(colMeans(smds$base)["meanbp1"]), unwgt$data$abs_stand_diff[unwgt$data$covariates == "meanbp1" & unwgt$data$type == "Base strata"])
# Base strata are equal in size so weighting shouldn't change anything
expect_equal(wgt, unwgt)
})
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 102)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 10)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 3)
wgt <- plot(ps, weighted_avg = TRUE)
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 102)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 5)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 3)
set.seed(12)
samp_rows <- sample(1:nrow(rhc_X), 102)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 5)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 3)
wgt <- plot(ps, weighted_avg = TRUE)
unwgt <- plot(ps, weighted_avg = FALSE)
smds <- calc_smds(ps)
colMeans(smds$base)
test_that("Correct smd for base stratification", {
set.seed(12)
samp_rows <- sample(1:nrow(rhc_X), 102)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 5)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 3)
wgt <- plot(ps, weighted_avg = TRUE)
unwgt <- plot(ps, weighted_avg = FALSE)
smds <- calc_smds(ps)
expect_equal(as.numeric(colMeans(smds$base)["pafi1"]), unwgt$data$abs_stand_diff[unwgt$data$covariates == "pafi1" & unwgt$data$type == "Base strata"])
# Base strata are equal in size so weighting shouldn't change anything
expect_equal(wgt, unwgt)
})
set.seed(12)
samp_rows <- sample(1:nrow(rhc_X), 102)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 5)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 3)
wgt <- plot(ps, weighted_avg = TRUE)
unwgt <- plot(ps, weighted_avg = FALSE)
smds <- calc_smds(ps)
expect_equal(as.numeric(colMeans(smds$base)["pafi1"]), unwgt$data$abs_stand_diff[unwgt$data$covariates == "pafi1" & unwgt$data$type == "Base strata"])
# Base strata are equal in size so weighting shouldn't change anything
expect_equal(wgt, unwgt)
# Base strata are equal in size so weighting shouldn't change anything
expect_equal(wgt$data, unwgt$data)
test_that("Correct smd for base stratification", {
set.seed(12)
samp_rows <- sample(1:nrow(rhc_X), 102)
X <- rhc_X[samp_rows, sample(1:ncol(rhc_X), 5)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 3)
wgt <- plot(ps, weighted_avg = TRUE)
unwgt <- plot(ps, weighted_avg = FALSE)
smds <- calc_smds(ps)
expect_equal(as.numeric(colMeans(smds$base)["pafi1"]), unwgt$data$abs_stand_diff[unwgt$data$covariates == "pafi1" & unwgt$data$type == "Base strata"])
# Base strata are equal in size so weighting shouldn't change anything
expect_equal(wgt$data, unwgt$data)
})
test_that("Correct smd for refined stratification", {
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 500)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-1), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
wgt <- plot(ref, weighted_avg = TRUE)
unwgt <- plot(ref, weighted_avg = FALSE)
smds <- calc_smds(ref)
expect_equal(as.numeric(colMeans(smds$refined, na.rm = TRUE)["scoma1"]), unwgt$data$abs_stand_diff[unwgt$data$covariates == "scoma1" & unwgt$data$type == "Refined strata"])
expect_equal(sum(table(ref$refined_strata) * smds$refined[, "scoma1"], na.rm = TRUE) / length(z), wgt$data$abs_stand_diff[wgt$data$covariates == "scoma1" & wgt$data$type == "Refined strata"])
})
p
covr::report()
set.seed(144)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-1), 10)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 2)
expect_error(plot(ps, legend = c("one", "two")), "Length of `legend`")
set.seed(144)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-1), 5)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 2)
set.seed(143)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-1), 5)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 2)
set.seed(1235)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-1), 5)]
z <- rhc_X[samp_rows, "z"]
ps <- prop_strat(z = z, X = X, nstrata = 2)
expect_error(plot(ps, legend = c("one", "two")), "Length of `legend`")
expect_error(plot(ps, incl_base = FALSE, incl_none = FALSE), "nothing to plot")
expect_error(plot(ps, by_strata = TRUE, incl_base = FALSE), "`by_strata` has thus been switched")
plot(ps, by_strata = TRUE, incl_base = FALSE)
expect_error(plot(ps, by_strata = TRUE, incl_base = FALSE), " has thus been switched")
expect_warning(plot(ps, by_strata = TRUE, incl_base = FALSE), "`by_strata` has thus been switched")
0
expect_warning(plot(ps, by_strata = TRUE, incl_base = FALSE), "`by_strata` has thus been switched")
expect_warning(plot(ps, by_strata = TRUE, incl_none = TRUE), "Cannot plot by stratum")
set.seed(10)
samp_rows <- sample(1:nrow(rhc_X), 500)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-1), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
expect_s3_class(plot(ref, incl_none = FALSE, incl_base = FALSE), "ggplot")
set.seed(14)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-1), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
expect_s3_class(plot(ref, incl_none = FALSE, incl_base = FALSE), "ggplot")
set.seed(128)
samp_rows <- sample(1:nrow(rhc_X), 500)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-1), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
expect_s3_class(plot(ref, by_strata = TRUE, incl_base = TRUE, incl_none = FALSE), "ggplot")
set.seed(128)
samp_rows <- sample(1:nrow(rhc_X), 500)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-1), 10)]
View(X)
1:(ncol(rhc_X)-1)
colnames(rhc_X)
set.seed(128)
samp_rows <- sample(1:nrow(rhc_X), 500)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-2), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
expect_s3_class(plot(ref, by_strata = TRUE, incl_base = TRUE, incl_none = FALSE), "ggplot")
expect_list(plot(ref, by_strata = TRUE, incl_base = TRUE, incl_none = FALSE))
expect_s3_object(plot(ref, by_strata = TRUE, incl_base = TRUE, incl_none = FALSE)[[2]], "ggplot")
expect_s3_class(plot(ref, by_strata = TRUE, incl_base = TRUE, incl_none = FALSE)[[2]], "ggplot")
covr::report()
set.seed(18)
samp_rows <- sample(1:nrow(rhc_X), 500)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-2), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
wgt <- plot(ref, weighted_avg = TRUE)
unwgt <- plot(ref, weighted_avg = FALSE)
smds <- calc_smds(ref)
colMeans(smds$refined
)
set.seed(18)
samp_rows <- sample(1:nrow(rhc_X), 500)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-2), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
wgt <- plot(ref, weighted_avg = TRUE)
unwgt <- plot(ref, weighted_avg = FALSE)
smds <- calc_smds(ref)
colMeans(smds$refined
)
ref
smds
test_that("Correct smd for refined stratification", {
set.seed(18)
samp_rows <- sample(1:nrow(rhc_X), 500)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-2), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
wgt <- plot(ref, weighted_avg = TRUE)
unwgt <- plot(ref, weighted_avg = FALSE)
smds <- calc_smds(ref)
expect_equal(as.numeric(colMeans(smds$refined, na.rm = TRUE)["hrt1"]), unwgt$data$abs_stand_diff[unwgt$data$covariates == "hrt1" & unwgt$data$type == "Refined strata"])
expect_equal(sum(table(ref$refined_strata) * smds$refined[, "hrt1"], na.rm = TRUE) / length(z), wgt$data$abs_stand_diff[wgt$data$covariates == "hrt1" & wgt$data$type == "Refined strata"])
})
covr::report()
covr::report()
covr::report()
usethis::use_test()
test_that("Printing works", {
set.seed(147)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-2), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
ref
})
set.seed(147)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-2), 10)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
set.seed(147)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-2), 5)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
ref
test_that("Printing works", {
set.seed(147)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-2), 5)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
expect_success(ref)
})
expect_invisible(ref)
devtools::load_all()
set.seed(147)
samp_rows <- sample(1:nrow(rhc_X), 100)
X <- rhc_X[samp_rows, sample(1:(ncol(rhc_X)-2), 5)]
z <- rhc_X[samp_rows, "z"]
ref <- refine(z = z, X = X)
expect_invisible(print(ref))
ps <- prop_strat(z = z, X = X)
expect_invisible(print(ps))
expect_invisible(print(strat(z = z, X = X)))
covr::report()
devtools::check()
devtools::check()
devtools::check()
# Choose 1000 patients and 10 covariates to work with for the example
set.seed(21)
samp <- sample(1:nrow(rhc_X), 1000)
cov_samp <- sample(1:26, 10)
ref <- refine(X = rhc_X[samp, cov_samp], z = rhc_X[samp, "z"])
plot(ref)
# Choose 1000 patients and 8 covariates to work with for the example
set.seed(28)
samp <- sample(1:nrow(rhc_X), 1000)
cov_samp <- sample(1:26, 8)
ref <- refine(X = rhc_X[samp, cov_samp], z = rhc_X[samp, "z"])
plot(ref)
